groups:
  - name: release
    jobs:
      - 'release-*'
  - name: build
    jobs:
      - build
      - update-dependencies
  - name: all
    jobs:
      - '*'

resource_types:
  - name: discord-alert
    type: registry-image
    source:
      repository: ghcr.io/tklein1801/concourse-discord-alert-resource

resources:
  - name: notify
    type: discord-alert
    source:
      url: ((discord_webhook))

  - name: weekly
    type: time
    icon: clock-outline
    source:
      interval: 168h

  - name: node-image
    type: registry-image
    source:
      repository: node
      tag: 20

  - name: repo
    type: git
    icon: github
    source:
      uri: ((repo_uri))
      private_key: ((repo_private_key))
      branch: main

  - name: version
    type: semver
    icon: tag-outline
    source:
      driver: s3
      initial_version: 0.0.0-rc.0
      bucket: ((version_bucket))
      key: ((service))/version
      region_name: ((version_bucket_region))
      access_key_id: ((version_bucket_access_key))
      secret_access_key: ((version_bucket_secret))

task-config: &task-release
  platform: linux
  inputs:
    - name: repo
    - name: version
  outputs:
    - name: repo
  params:
    CI: 'true'
    FORCE_COLOR: 1
  run:
    path: sh
    args:
      - -evc
      - |
        git config --global user.name 'Thorben Klein'
        git config --global user.email thorben@tklein.it
        NEW_VERSION="$(cat version/version)"
        cd repo
        npm ci
        npm test
        npm run build
        npm version "$NEW_VERSION" --no-git-tag-version
        git tag | xargs git tag -d > /dev/null
        git tag -a "((service_name))-v$NEW_VERSION" -m "Release ((service_name))-v$NEW_VERSION" > /dev/null
        echo "//registry.npmjs.org/:_authToken=((npm_token))" > .npmrc
        npm publish --access public

jobs:
  - name: build
    public: true
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: 'Build of ((service_name)) failed'
        role: '1342563020215291936'
    plan:
      - in_parallel:
          - get: node-image
          - get: repo
            trigger: true
          - get: version
            params: {pre: rc}
      - task: build
        image: node-image
        config:
          inputs:
            - name: repo
            - name: version
          params:
            CI: 'true'
            FORCE_COLOR: 1
          platform: linux
          run:
            path: sh
            args:
              - -exc
              - |
                NEW_VERSION=$(cat version/version)
                cd repo
                npm ci
                npm test
                npm run build
                npm version "$NEW_VERSION" --no-git-tag-version
                npm publish --access public --dry-run
      - put: version
        params: {file: version/version}
  - name: update-dependencies
    public: true
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: 'Failed to update dependencies for ((service_name))'
        role: '1342563020215291936'
    on_success:
      put: repo
      params:
        repository: repo
    plan:
      - in_parallel:
          - get: node-image
          - get: repo
          - get: weekly
            trigger: true
      - task: npm-update
        image: node-image
        config:
          inputs:
            - name: repo
          outputs:
            - name: repo
          params:
            CI: 'true'
            FORCE_COLOR: 1
          platform: linux
          run:
            path: sh
            args:
              - -exc
              - |
                cd repo
                npm ci
                npm update
                npm audit fix --force
                npm test
                npm run build
                git config --global user.name 'Thorben Klein'
                git config --global user.email thorben@tklein.it
                git add .
                git commit -m 'build(dependencies): Automated update of dependencies'
  - name: release-patch
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: 'Release of patch for ((service_name)) failed'
        role: '1342563020215291936'
    plan:
      - in_parallel:
          - get: version
            passed: [build]
            params: {bump: patch}
          - get: repo
          - get: node-image
      - task: build
        image: node-image
        config:
          <<: *task-release
      - in_parallel:
          - put: version
            params: {file: version/version}
          - put: repo
            params:
              repository: repo
              only_tag: true

  - name: release-minor
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: 'Release of minor for ((service_name)) failed'
        role: '1342563020215291936'
    plan:
      - in_parallel:
          - get: version
            passed: [build]
            params: {bump: minor}
          - get: repo
          - get: node-image
      - task: build
        image: node-image
        config:
          <<: *task-release
      - in_parallel:
          - put: version
            params: {file: version/version}
          - put: repo
            params:
              repository: repo
              only_tag: true

  - name: release-major
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: 'Release of major for ((service_name)) failed'
        role: '1342563020215291936'
    plan:
      - in_parallel:
          - get: version
            passed: [build]
            params: {bump: major}
          - get: repo
          - get: node-image
      - task: build
        image: node-image
        config:
          <<: *task-release
      - in_parallel:
          - put: version
            params: {file: version/version}
          - put: repo
            params:
              repository: repo
              only_tag: true
